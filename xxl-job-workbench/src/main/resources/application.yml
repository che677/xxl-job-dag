server:
  port: 12809
  servlet:
    context-path: /workbench

mybatis:
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.xxl.job.core.biz.model

spring:
  datasource:
    master:
      url: jdbc:mysql://localhost:3306/workbench?characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useUnicode=true&serverTimezone=GMT
      username: root
      password: 123456
      driverClassName: com.mysql.cj.jdbc.Driver
    slave1:
      url: jdbc:mysql://localhost:3307/workbench?characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useUnicode=true&serverTimezone=GMT
      username: root
      password: 123456
      driverClassName: com.mysql.cj.jdbc.Driver
    slave2:
      url: jdbc:mysql://localhost:3308/workbench?characterEncoding=UTF-8&autoReconnect=true&zeroDateTimeBehavior=convertToNull&useUnicode=true&serverTimezone=GMT
      username: root
      password: 123456
      driverClassName: com.mysql.cj.jdbc.Driver
    hikari:
      leak-detection-threshold: 2000
  kafka:
    bootstrap-servers: master:9092,master:9093
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 生产者每个批次最多提交多大的数据（默认16k）
      batch-size: 16384
      # 生产者一端总的可用发送缓冲区大小，为32MB
      buffer-memory: 33554432
      compression-type: snappy
      properties:
      # request.timeout.ms 在发送数据时等待服务器返回响应的时间
        request:
          timeout:
            ms: 1000
        # 每一批次发送的等待时间
        linger:
          ms: 100
        # retry.backoff.ms  每次重试之间的时间间隔，默认是100ms，这里配置50ms
        retry:
          backoff:
            ms: 100
      acks: all
      retries: 3
    consumer:
      concurrency: 3  # 监听器的线程数
      maxpollrecordsconfig: 500 # 每批次获取的数据条数
      # 消费组ID
      group-id: defaultConsumerGroup
      # 如果在当前kafka中找不到当前offset，就读取最早的
      auto-offset-reset: earliest
      # 自动提交偏移量
      enable-auto-commit: false
      # offset自动提交的时间间隔
      auto-commit-interval: 1000
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    listener:
      missing-topics-fatal: false
      ack-mode: manual_immediate
      concurrency: 3
  dynamic:
    tp:
      isRejectAlarm: true
      enabled: true
      enabledBanner: true           # 是否开启banner打印，默认true
      enabledCollect: true          # 是否开启监控指标采集，默认false
      collectorType: logging     # 监控数据采集器类型（jsonlog | micrometer），默认logging
      logPath: /opt/           # 监控日志数据路径，默认 ${user.home}/logs，采集类型非jsonlog不用配置
      monitorInterval: 5            # 监控时间间隔（报警判断、指标采集），默认5s
      threshold: 90 # 监控触发的百分比
      zookeeper:
        zkConnectStr: master:2181,master:2182
        configVersion:
        rootNode: /configserver
        node: dev
        configKey:
      configType: properties               # 配置文件类型，非cloud nacos 和 apollo需配置，其他不用配
      executors:                                   # 动态线程池配置
        - threadPoolName: dtpExecutor1
          corePoolSize: 6
          maximumPoolSize: 20
          queueCapacity: 200
          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类
          rejectedHandlerType: AbortPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类
          keepAliveTime: 50
          allowCoreThreadTimeOut: false
          threadNamePrefix: test1           # 线程名前缀
        - threadPoolName: dtpExecutor2
          corePoolSize: 6
          maximumPoolSize: 15
          queueCapacity: 1000
          queueType: VariableLinkedBlockingQueue   # 任务队列，查看源码QueueTypeEnum枚举类
          rejectedHandlerType: AbortPolicy    # 拒绝策略，查看RejectedTypeEnum枚举类
          keepAliveTime: 50
          allowCoreThreadTimeOut: false
          threadNamePrefix: test2           # 线程名前缀
dubbo:
  protocol:
    name: dubbo
    port: 20881
  application:
    name: demo-consumer # 消息者名字
  registry:
    address: zookeeper://master:2181?backup=master:2181
  consumer:
    timeout: 1000
  config-center:
    address: zookeeper://master:2181?backup=master:2181